name: Autobuild for Docker

on: [push, workflow_dispatch, repository_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x64, aarch64]
    steps:
      - name: Checkout Zebrafish
        uses: actions/checkout@v4
        with:
          path: zebrafish
      - name: Checkout Buildroot
        uses: actions/checkout@v4
        with:
          repository: buildroot/buildroot
          ref: master
          path: buildroot
      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y sed make binutils build-essential diffutils gcc g++ bash patch \
            gzip bzip2 perl tar cpio unzip rsync file bc findutils wget python3 git libelf-dev jq \
            curl libdigest-sha3-perl
      - name: Patch Buildroot
        shell: bash
        run: |
          cd "${{ github.workspace }}/zebrafish/buildroot-scripts"
          ./patch.sh \
            "${{ github.workspace }}/buildroot" \
            "${{ github.workspace }}/zebrafish"
      - name: Restore Buildroot cache
        uses: actions/cache/restore@v3
        with:
          key: zebrafish-cache-${{ matrix.architecture }}
          path: ${{ github.workspace }}/buildroot/output
      - name: Configure Buildroot
        shell: bash
        run: |
          cd "${{ github.workspace }}/zebrafish/buildroot-scripts"
          ./config.sh \
            "${{ github.workspace }}/buildroot" \
            "${{ github.workspace }}/zebrafish" \
            "${{ matrix.architecture }}"
      - name: Build Buildroot
        shell: bash
        run: |
          cd "${{ github.workspace }}/zebrafish/buildroot-scripts"
          ./build.sh \
            "${{ github.workspace }}/buildroot" \
            "${{ github.workspace }}/zebrafish"
      - name: Prepare artifacts
        shell: bash
        run: |
          cd "${{ github.workspace }}/zebrafish/buildroot-scripts"
          ./prepare-artifacts.sh \
            "${{ github.workspace }}/buildroot" \
            "${{ github.workspace }}/artifacts" \
            "${{ matrix.architecture }}"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zebrafish-${{ matrix.architecture }}
          path: ${{ github.workspace }}/artifacts/upload/zebrafish-${{ matrix.architecture }}.tar
      - name: Deploy to CDN
        if: github.ref == 'refs/heads/master'
        env:
          AWS_ENDPOINT_URL: ${{ secrets.AWS_ENDPOINT_URL }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
        run: |
          aws s3 cp --recursive "${{ github.workspace }}/artifacts/upload/" "s3://$AWS_BUCKET/" --endpoint-url "$AWS_ENDPOINT_URL"
      - name: Prepare Buildroot cache
        shell: bash
        run: |
          cd "${{ github.workspace }}/zebrafish/buildroot-scripts"
          ./prepare-cache.sh \
            "${{ github.workspace }}/buildroot"
      - name: Save Buildroot cache
        uses: actions/cache/save@v3
        with:
          key: zebrafish-cache-${{ matrix.architecture }}
          path: ${{ github.workspace }}/buildroot/output
