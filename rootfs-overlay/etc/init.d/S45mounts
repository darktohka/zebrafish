#!/bin/bash

this=S45mounts
. /lib/zebrafish/functions
assert_root $this

do_start() {
  zfskeys=$(get_kernel_parameter "zfskeys")
  zfsmount=$(get_kernel_parameter "zfsmount")

  if [[ -n "$zfsmount" ]]; then
    IFS=',' read -ra pools <<< "$zfsmount"

    for pool in "${pools[@]}"; do
      echo -n "Importing ZFS pool $pool: "
      zpool import "$pool" && echo "OK" || echo "FAIL"
    done
  fi

  if [[ -n "$zfskeys" ]]; then
    IFS=';' read -ra keypairs <<< "$zfskeys"

    for keypair in "${keypairs[@]}"; do
      IFS=, read -ra params <<< "$keypair"
      local pool="${params[0]}"
      local key="${params[1]}"

      echo -n "Importing ZFS key for $pool: "
      echo "$key" | zfs load-key -L prompt "$pool" && echo "OK" || echo "FAIL"
    done
  fi

  for zfsmount in $(zfs list -H -o name,mountpoint | grep -v '^zebrafish' | grep -v 'none$' | cut -f 1); do
    echo -n "Mounting ZFS filesystem $zfsmount: "
    zfs mount "$zfsmount" && echo "OK" || echo "FAIL"
  done
}

do_stop() {
  for zfsmount in $(zfs list -H -o name,mountpoint | grep -v '^zebrafish' | grep -v 'none$' | cut -f 1); do
    echo -n "Unmounting ZFS filesystem $zfsmount: "
    zfs unmount "$zfsmount" && echo "OK" || echo "FAIL"
  done

  zfsmount=$(get_kernel_parameter "zfsmount")

  if [[ -n "$zfsmount" ]]; then
    IFS=',' read -ra pools <<< "$zfsmount"

    for pool in "${pools[@]}"; do
      echo -n "Detaching ZFS pool $pool: "
      zpool export "$pool" && echo "OK" || echo "FAIL"
    done
  fi

  zfs unload-key -a
}

case "$1" in
  start)
    do_start
    ;;
  stop)
    do_stop
    ;;
  restart)
    do_stop
    sleep 1
    do_start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac
